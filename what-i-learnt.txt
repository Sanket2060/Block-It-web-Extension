Block-It Extension - Learnings and Key Takeaways

1. Chrome Extension Development

Learned how Chrome extensions work and their structure.

Understood the use of manifest.json and its role in defining extension permissions and background scripts.

Explored the different types of Chrome extensions (popup, content scripts, background scripts).

2. Manifest.json File

Configuring permissions (e.g., tabs, storage).

Adding icons and specifying background scripts.

Understanding content_scripts and background properties.

3. Content Scripts and DOM Manipulation

Injecting JavaScript into webpages to modify behavior.

Blocking website content dynamically.

Displaying motivational quotes or meme images instead of blocked websites.

4. Local Storage in Extensions

Using chrome.storage.local to store blocked websites.

Fetching and updating stored data efficiently.

5. Event Listeners and Communication

Implementing event listeners to detect user actions.

6. Popup UI & Styling (HTML, CSS, JavaScript)

Creating a simple and user-friendly popup UI.

Styling with CSS to enhance appearance.

Adding interactivity using JavaScript.

7. Loading and Installing Chrome Extensions

Enabling Developer Mode in Chrome.

Using "Load Unpacked" to install custom extensions.

Pinning the extension for easy access.

8. Handling Images and External Resources

Allowing users to specify custom images for blocked sites.

Loading and displaying images dynamically.

9. Debugging Chrome Extensions

Using console.log() for debugging in Chrome DevTools.

Checking errors in the Extensions tab of Chrome.

Identifying permission issues and fixing them.

10. Project Structuring & Optimization

Organizing files (popup.html, popup.js, content.js, manifest.json).

Keeping code modular and maintainable.

Improving user experience with better UI/UX.

Next Steps & Improvements

Explore background scripts for more complex features.

Add sync storage to save settings across devices.

Implement scheduled blocking (e.g., block sites only during specific hours).

Publish the extension on the Chrome Web Store.

